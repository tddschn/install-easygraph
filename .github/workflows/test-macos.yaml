name: Test the install-easygraph Action (macOS)
on: 
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false
    # inputs:
    #   cpp-binding-framework: # id of input
    #     description: "The framework used to build easygraph's C++ binding"
    #     required: false
    #     default: "pybind11"
    #     type: choice
    #     options:
    #       - "pybind11"
    #       - "boost-python"
    #   easygraph-checkout-path:
    #     default: "Easy-Graph"
    #     description: 'The path to checkout the Easy-Graph repository'
    #     required: false
    #     type: string
jobs:
  test-install-easygraph:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.python-version }}
      cancel-in-progress: true
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        # python-version: ["3.7", "3.8", "3.9"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        # cpp-binding-framework: ["pybind11"]
        # python-package-manager-install-command: ["python -m pip install", "conda install --yes"]
        # use-cached-build: ["true", "false"]
        include:
          - use-cached-build: 'true'
    steps:
      # - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'
      - name: 'Run install-easygraph - ${{ matrix.cpp-binding-framework }}'
        id: 'test'
        continue-on-error: true
        uses: tddschn/install-easygraph@master
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # cpp-binding-framework: '${{ matrix.cpp-binding-framework }}'
          use-cached-build: '${{ matrix.use-cached-build }}'
          install-lxml: 'false'

      - name: Install tools for debugging on failure
        if: ${{ failure() }}
        # if: "'${{ steps.test.outcome }}' == 'failure'"
        continue-on-error: true
        shell: bash
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          brew install ranger ipython

      - name: Setup tmate session on failure
        # if: "'${{ steps.test.outcome }}' == 'failure' && github.event_name == 'workflow_dispatch' && inputs.debug_enabled"
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        continue-on-error: true
        env: 
          SITE_PACKAGES_PATH: '${{ steps.test.outputs.site-packages-path }}'
          EG_EGG_DIR_PATH: '${{ steps.test.outputs.eg-egg-dir-path }}'
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          limit-access-to-actor: true
          


  
  # test-install-easygraph-conda:
  #   if: false
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.7", "3.8", "3.9"]
  #       cpp-binding-framework: ["pybind11", "boost-python"]
  #       # python-package-manager-install-command: ["python -m pip install", "conda install --yes"]
  #       # use-cached-build: ["true", "false"]
  #       include:
  #         - python-package-manager-install-command: 'conda install --yes'
  #         - use-cached-build: 'true'
  #   steps:
  #     # - uses: actions/checkout@v3
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '${{ matrix.python-version }}'
  #     - name: 'Run install-easygraph - ${{ matrix.cpp-binding-framework }}'
  #       id: 'test'
  #       uses: tddschn/install-easygraph@master
  #       with:
  #         cpp-binding-framework: '${{ matrix.cpp-binding-framework }}'
  #         use-cached-build: '${{ matrix.use-cached-build }}'
  #         python-package-manager-install-command: '${{ matrix.python-package-manager-install-command }}'

  #     - name: Install tools for debugging on failure
  #       if: ${{ failure() }}
  #       shell: bash
  #       run: |
  #         sudo apt install ranger ipython3
  #     - name: Setup tmate session on failure
  #       if: "failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled"
  #       uses: mxschmitt/action-tmate@v3
  #       env: 
  #         SITE_PACKAGES_PATH: '${{ steps.test.outputs.site-packages-path }}'
  #         EG_EGG_DIR_PATH: '${{ steps.test.outputs.eg-egg-dir-path }}'
  #       with:
  #         limit-access-to-actor: true
          


  